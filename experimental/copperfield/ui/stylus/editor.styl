$bg = rgb(224, 224, 224);
$shadow = rgba(12, 0, 32, 0.4);
$eve-purple-l = rgb(107, 103, 173);
$eve-purple-m = rgb(91, 89, 164);
$eve-purple-d = rgb(74, 64, 136);
$eve-blue-l = rgb(0, 184, 241);
$eve-blue-m = rgb(0, 158, 224);
$eve-blue-d = rgb(0, 121, 177);

body * { display: flex; flex-direction: column; }
body { background: $bg; }

pre { font-family: monospace; }
.ui-input { outline: none; }

.justify-start { justify-content: flex-start; }
.justify-center { justify-content: center; }
.justify-end { justify-content: flex-end; }

.align-start { align-items: flex-start; }
.align-center { align-items: center; }
.align-end { align-items: flex-end; }

// Debug
.bordered { border: 1px solid gray; }
.sample div { display: block; }
.sample span { display: inline-block; }
.sample spaced { padding: 0 3px; }

.wiki-root {
  align-items: center;
}

.wiki-page {
  width: 960px;
}
.wiki-header {
  align-self: stretch;
  .wiki-nav-item { padding: 0 0.5em; }
}

.wiki-blocks {
  box-shadow: alpha(black, 0.5) 0 2px 2px;
}

.wiki-block {
  $offset = rgb(20, 20, 20);
  background: $bg + $offset * 2;
  border-top: 1px solid ($bg + $offset * 1);
  border-bottom: 1px solid $bg;

  .block-controls {
    position: relative;
    top: -2px;
    align-self: flex-end;
    align-items: stretch;

    background: alpha($eve-purple-l, 0.5);
    border-bottom: 1px solid alpha(black, 0.1);
    border-top: 1px solid alpha(white, 0.2);
    box-shadow: alpha(black, 0.5) 1px 2px 2px;
    opacity: 0;
    transition: all 0.3s;

    & > * {
      position: relative;
      top: -2px;
      font-size: 1rem;
      min-width: 2em;
      align-items: center;
      justify-content: flex-end;
      padding 0 0.25em;
      border: none;
      background: transparent;

      &:first-child { border-bottom-left-radius: 3px; }
      & + * { border-left: 1px solid alpha($eve-purple-l, 0.5); }
    }

    select {
      -webkit-appearance: none;
      margin: 0;
      padding-right: 0.5em;
      border-radius: 0;
    }
  }
  &:hover .block-controls { opacity: 1; }

  .block-content, .block-scratch {
    padding: 1em;
    padding-top: 0;
    min-height: 1em;
  }

  &.add-button { align-items: center; justify-content: center; height: 3em; opacity: 0; border: 1px solid darken($bg, 10%); transition: all 0.3s; }
  &.add-button:hover { opacity: 0.75; }
}


// CodeMirror
.CodeMirror.cm-s-default {
  $offset = rgb(20, 20, 20);
  $radius = 3px;
  background: $bg + $offset * 2;
  border-radius: $radius;
  box-shadow: $shadow 0 2px 5px;
  .CodeMirror-lines {
    border-top: 1px solid $bg + $offset * 3;
    border-bottom: 1px solid $bg + $offset;
    border-radius: $radius;
  }
  .CodeMirror-gutters {
    background-color: $bg + $offset;
    border-right: 1px solid $bg - $offset;
    border-radius: $radius;
  }
}

// Document Flow
body .document-flow {
  * { display: block; flex-direction: unset; }
  span, em, strong, a { display: inline-block; }

}

body .document, body .document-flow {
  h1 { font-size: 2em; }
  h2 { font-size: 1.5em; }
  h3 { font-weight: bold; }

  ul { list-style: disc; }
  ol { list-style: decimal; }
  li { display: list-item; margin-left: 1.2em; }

  em { font-style: italic; }
  strong { font-weight: bold; }
  code {
    padding: 0.5em;
    font-family: monospace;
    white-space: pre;
    background: alpha($shadow, 0.1);
    border-radius: 3px;
  }

  table { overflow: auto; width: 100%; }
  th { font-weight: bold; text-align: left; }
  thead tr { border-bottom: 1px solid $shadow; }
  tbody:before { line-height: 1em; content:"\200C"; display: block; }
  tbody tr:nth-child(2n) { background: alpha($shadow, 0.1); }
  tr td {
    padding-top: 4px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    max-width: 0;
  }
}

//   for $count in (1..8) {
//     for $ix in(1..$count) {
//       tr td:nth-child({$ix}):nth-last-child({$count - $ix + 1}) { max-width: unit(100/$count, "%"); }
//     }
//   }
